// commands/poll.js
const { SlashCommandBuilder, EmbedBuilder, PermissionFlagsBits } = require('discord.js');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('poll')
    .setDescription('–°—Ç–≤–æ—Ä—é—î –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è –∑ —Ä–µ–∞–∫—Ü—ñ—è–º–∏')
    .addStringOption(option => 
      option.setName('–∑–∞–ø–∏—Ç–∞–Ω–Ω—è')
        .setDescription('–ó–∞–ø–∏—Ç–∞–Ω–Ω—è –¥–ª—è –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è')
        .setRequired(true))
    .addStringOption(option => 
      option.setName('–≤–∞—Ä—ñ–∞–Ω—Ç–∏')
        .setDescription('–í–∞—Ä—ñ–∞–Ω—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π, —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ —Å–∏–º–≤–æ–ª–æ–º | (–Ω–µ–æ–±–æ–≤\'—è–∑–∫–æ–≤–æ)')
        .setRequired(false)),
  
  async execute(interaction) {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–∞–≤–∞ –Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥–æ–ª–æ—Å—É–≤–∞–Ω—å
    if (!interaction.member.permissions.has(PermissionFlagsBits.ManageMessages) && 
        !interaction.member.roles.cache.some(r => r.name === 'Poll Creator')) {
      return interaction.reply({
        content: '–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥–æ–ª–æ—Å—É–≤–∞–Ω—å!',
        ephemeral: true
      });
    }
    
    const pollTitle = interaction.options.getString('–∑–∞–ø–∏—Ç–∞–Ω–Ω—è');
    const optionsString = interaction.options.getString('–≤–∞—Ä—ñ–∞–Ω—Ç–∏');
    let options = [];
    
    if (optionsString) {
      options = optionsString.split('|').map(option => option.trim()).filter(option => option);
    }
    
    if (options.length > 10) {
      return interaction.reply({
        content: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤ - 10!',
        ephemeral: true
      });
    }
    
    try {
      // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–º–±–µ–¥ –¥–ª—è –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è
      const pollEmbed = new EmbedBuilder()
        .setColor('#0099ff')
        .setTitle('üìä –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è')
        .setDescription(pollTitle)
        .setFooter({ 
          text: `–ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–æ ${interaction.user.tag}`, 
          iconURL: interaction.user.displayAvatarURL() 
        })
        .setTimestamp();
      
      // –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –Ω–∞ —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥—É, —â–æ–± –≤–æ–Ω–∞ –Ω–µ –ø—Ä–æ—Ç–µ—Ä–º—ñ–Ω—É–≤–∞–ª–∞—Å—å
      await interaction.deferReply({ ephemeral: true });
      
      // –Ø–∫—â–æ —î –≤–∞—Ä—ñ–∞–Ω—Ç–∏, –¥–æ–¥–∞—î–º–æ —ó—Ö –¥–æ –µ–º–±–µ–¥—É
      if (options.length > 0) {
        // –ï–º–æ–¥–∑—ñ –¥–ª—è –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤ (–º–∞–∫—Å–∏–º—É–º 10)
        const reactions = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£', 'üîü'];
        
        for (let i = 0; i < options.length; i++) {
          pollEmbed.addFields({ name: `${reactions[i]} ${options[i]}`, value: '\u200B', inline: false });
        }
        
        const pollMessage = await interaction.channel.send({ embeds: [pollEmbed] });
        
        // –î–æ–¥–∞—î–º–æ —Ä–µ–∞–∫—Ü—ñ—ó –¥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        for (let i = 0; i < options.length; i++) {
          await pollMessage.react(reactions[i]);
        }
        
        await interaction.editReply({ content: '–ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!', ephemeral: true });
      } else {
        // –Ø–∫—â–æ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤ –Ω–µ–º–∞—î, —Ü–µ –ø—Ä–æ—Å—Ç–µ –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è —Ç–∞–∫/–Ω—ñ
        const pollMessage = await interaction.channel.send({ embeds: [pollEmbed] });
        
        // –î–æ–¥–∞—î–º–æ —Ä–µ–∞–∫—Ü—ñ—ó üëç —ñ üëé
        await pollMessage.react('üëç');
        await pollMessage.react('üëé');
        
        await interaction.editReply({ content: '–ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!', ephemeral: true });
      }
    } catch (error) {
      console.error(error);
      interaction.editReply({
        content: '–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è!',
        ephemeral: true
      });
    }
  }
};