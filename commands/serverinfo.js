// commands/serverinfo.js
const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('serverinfo')
    .setDescription('–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Å–µ—Ä–≤–µ—Ä'),
  
  async execute(interaction) {
    const guild = interaction.guild;
    
    // Get bot count & human count
    const members = await guild.members.fetch();
    const botCount = members.filter(member => member.user.bot).size;
    const humanCount = guild.memberCount - botCount;
    
    // Get channel counts
    const channels = guild.channels.cache;
    const textChannels = channels.filter(channel => channel.type === 0).size;
    const voiceChannels = channels.filter(channel => channel.type === 2).size;
    const categoryChannels = channels.filter(channel => channel.type === 4).size;
    
    // Get role count (excluding @everyone)
    const roleCount = guild.roles.cache.size - 1;
    
    // Create an embed with server info
    const embed = new EmbedBuilder()
      .setColor('#5865F2')
      .setTitle(`${guild.name}`)
      .setThumbnail(guild.iconURL({ dynamic: true, size: 1024 }))
      .addFields(
        { name: 'ID', value: guild.id, inline: true },
        { name: '–í–ª–∞—Å–Ω–∏–∫', value: `<@${guild.ownerId}>`, inline: true },
        { name: '–°—Ç–≤–æ—Ä–µ–Ω–æ', value: `<t:${Math.floor(guild.createdTimestamp / 1000)}:F>`, inline: true },
        { name: '–£—á–∞—Å–Ω–∏–∫–∏', value: `üë• –í—Å—å–æ–≥–æ: ${guild.memberCount}\nüë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ: ${humanCount}\nü§ñ –ë–æ—Ç–∏: ${botCount}`, inline: true },
        { name: '–ö–∞–Ω–∞–ª–∏', value: `üí¨ –¢–µ–∫—Å—Ç–æ–≤—ñ: ${textChannels}\nüîä –ì–æ–ª–æ—Å–æ–≤—ñ: ${voiceChannels}\nüìÅ –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó: ${categoryChannels}`, inline: true },
        { name: '–†–æ–ª—ñ', value: `${roleCount}`, inline: true },
        { name: '–†—ñ–≤–µ–Ω—å –ø—ñ–¥—Å–∏–ª–µ–Ω–Ω—è', value: `–†—ñ–≤–µ–Ω—å ${guild.premiumTier} (${guild.premiumSubscriptionCount} –ø—ñ–¥—Å–∏–ª–µ–Ω—å)`, inline: true }
      )
      .setFooter({ text: `–ó–∞–ø–∏—Ç–∞–Ω–æ: ${interaction.user.tag}` })
      .setTimestamp();
    
    await interaction.reply({ embeds: [embed] });
  }
};